{
  "name": "datadog-triggered-incident-workflow-dag",
  "description": "Dynamic Production incident response workflow with AI investigation and Slack integration powered by Kubiya workflows - https://docs.kubiya.ai",
  "params": {
    "incident_id": "$INCIDENT_PUBLIC_ID",
    "incident_title": "$INCIDENT_TITLE",
    "incident_severity": "$INCIDENT_SEVERITY",
    "incident_priority": "High",
    "incident_body": "$INCIDENT_MSG",
    "incident_url": "$INCIDENT_URL",
    "incident_source": "datadog",
    "incident_owner": "devops",
    "slack_channel_id": "#inc-$INCIDENT_PUBLIC_ID-$INCIDENT_TITLE",
    "max_retries": "3",
    "customer_impact": "UNKNOWN",
    "affected_services": "NA",
    "environment": "$TAGS",
    "alert_id": "$ALERT_ID",
    "alert_status": "$ALERT_STATUS", 
    "alert_priority": "$ALERT_PRIORITY",
    "all_tags": "$TAGS",
    "hostname": "$HOSTNAME",
    "normalize_channel_name": "true"
  },
  "env": {
    "KUBIYA_USER_EMAIL": "${KUBIYA_USER_EMAIL}",
    "KUBIYA_API_KEY": "${KUBIYA_API_KEY}",
    "KUBIYA_USER_ORG": "${KUBIYA_USER_ORG}",
    "KUBIYA_AUTOMATION": "1",
    "INCIDENT_SEVERITY": "medium",
    "INCIDENT_PRIORITY": "medium"
  },
  "steps": [
    {
      "name": "validate-incident",
      "command": "echo \"\ud83d\udd0d VALIDATING INCIDENT PARAMETERS\"\necho \"=================================\"\nVALIDATION_PASSED=true\nMISSING_PARAMS=\"\"\n\nif [ -z \"${incident_id}\" ]; then\n  echo \"\u274c ERROR: incident_id is required\"\n  VALIDATION_PASSED=false\n  MISSING_PARAMS=\"${MISSING_PARAMS} incident_id\"\nfi\n\nif [ -z \"${incident_title}\" ]; then\n  echo \"\u274c ERROR: incident_title is required\"\n  VALIDATION_PASSED=false\n  MISSING_PARAMS=\"${MISSING_PARAMS} incident_title\"\nfi\n\nif [ -z \"${incident_severity}\" ]; then\n  echo \"\u274c ERROR: incident_severity is required\"\n  VALIDATION_PASSED=false\n  MISSING_PARAMS=\"${MISSING_PARAMS} incident_severity\"\nfi\n\nif [ -z \"${affected_services}\" ]; then\n  echo \"\u26a0\ufe0f WARNING: affected_services not provided - will create validation agent\"\nfi\n\ncase \"${incident_severity}\" in\n  \"critical\"|\"high\"|\"medium\"|\"low\")\n    echo \"\u2705 Severity ${incident_severity} is valid\"\n    ;;\n  *)\n    echo \"\u274c ERROR: Invalid severity ${incident_severity}. Must be: critical, high, medium, or low\"\n    VALIDATION_PASSED=false\n    MISSING_PARAMS=\"${MISSING_PARAMS} valid_severity\"\n    ;;\nesac\n\nif [ \"$VALIDATION_PASSED\" = \"true\" ]; then\n  echo \"\ud83d\udccb INCIDENT METADATA:\"\n  echo \"  ID: ${incident_id}\"\n  echo \"  Title: ${incident_title}\"\n  echo \"  Severity: ${incident_severity}\"\n  echo \"  Priority: ${incident_priority}\"\n  echo \"  Owner: ${incident_owner}\"\n  echo \"  Source: ${incident_source}\"\n  echo \"  Affected Services: ${affected_services:-TBD via agent}\"\n  echo \"  Customer Impact: ${customer_impact}\"\n  echo \"\"\n  echo \"\u2705 Incident validation completed successfully\"\nelse\n  echo \"\u274c Validation failed. Missing parameters: ${MISSING_PARAMS}\"\n  echo \"\u26a0\ufe0f Continuing workflow to handle validation failure...\"\nfi\n",
      "description": "Validate incident parameters and prerequisites",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [],
      "output": "validation_status"
    },
    {
      "name": "parse-environment-from-tags",
      "description": "Extract environment from Datadog tags",
      "command": "echo 'üè∑Ô∏è PARSING ENVIRONMENT FROM DATADOG TAGS'\necho '========================================'\necho 'Raw tags from Datadog: ${environment}'\necho ''\n\n# Parse Environment tag from comma-separated list\n# Tags format: \"monitor, name:myService, role:computing-node, Environment:production\"\nENV_VALUE=\"\"\n\n# Convert to lowercase for case-insensitive matching\nTAGS_LOWER=$(echo \"${environment}\" | tr '[:upper:]' '[:lower:]')\necho 'Tags (lowercase): '\"$TAGS_LOWER\"\n\n# Extract environment value using different possible formats\nif echo \"$TAGS_LOWER\" | grep -q \"environment:\"; then\n  # Format: Environment:production\n  ENV_VALUE=$(echo \"$TAGS_LOWER\" | grep -o \"environment:[^,]*\" | cut -d: -f2 | tr -d ' ')\nelif echo \"$TAGS_LOWER\" | grep -q \"env:\"; then\n  # Format: env:production  \n  ENV_VALUE=$(echo \"$TAGS_LOWER\" | grep -o \"env:[^,]*\" | cut -d: -f2 | tr -d ' ')\nelse\n  echo '‚ö†Ô∏è No Environment or env tag found in tags'\n  # Default fallback\n  ENV_VALUE=\"development\"\nfi\n\n# Clean up the value\nENV_VALUE=$(echo \"$ENV_VALUE\" | tr -d '\"' | tr -d \"'\" | xargs)\n\necho 'Extracted environment: '\"$ENV_VALUE\"\n\n# Validate and normalize environment values\ncase \"$ENV_VALUE\" in\n  \"production\"|\"prod\")\n    ENV_VALUE=\"na-production\"\n    echo 'Normalized to: na-production'\n    ;;\n  \"eu-production\"|\"eu-prod\")\n    ENV_VALUE=\"eu-production\"\n    echo 'Normalized to: eu-production'\n    ;;\n  \"integration\"|\"int\"|\"staging\")\n    ENV_VALUE=\"na-integration\"\n    echo 'Normalized to: na-integration'\n    ;;\n  \"development\"|\"dev\")\n    ENV_VALUE=\"development\"\n    echo 'Normalized to: development'\n    ;;\n  *)\n    echo 'Unknown environment, defaulting to development'\n    ENV_VALUE=\"development\"\n    ;;\nesac\n\necho \"$ENV_VALUE\"",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [\n        \"validate-incident\"\n      ],
      "output": "parsed_environment"
    },
    {
      "name": "normalize-channel-name",
      "description": "Normalize the channel name by replacing spaces with underscores and converting to lower case",
      "command": "echo 'üìù NORMALIZING SLACK CHANNEL NAME'\necho 'Original: ${slack_channel_id}'\n\n# Normalize channel name for Slack compatibility\nNORMALIZED=\"${slack_channel_id}\"\n\n# Replace spaces with underscores\nNORMALIZED=$(echo \"$NORMALIZED\" | sed 's/ /_/g')\n\n# Replace special characters with underscores\nNORMALIZED=$(echo \"$NORMALIZED\" | sed 's/[^a-zA-Z0-9_#-]/_/g')\n\n# Remove multiple consecutive underscores\nNORMALIZED=$(echo \"$NORMALIZED\" | sed 's/__*/_/g')\n\n# Convert to lowercase\nNORMALIZED=$(echo \"$NORMALIZED\" | tr '[:upper:]' '[:lower:]')\n\n# Remove trailing underscores\nNORMALIZED=$(echo \"$NORMALIZED\" | sed 's/_$//')\n\necho \"Normalized: $NORMALIZED\"\necho \"$NORMALIZED\"",
      "depends": [
        "validate-incident"
      ],
      "executor": {
        "type": "command",
        "config": {}
      },
      "output": "NORMALIZED_CHANNEL_NAME"
    },
    {
      "name": "setup-slack-integration",
      "description": "Initialize Slack integration for incident communications",
      "executor": {
        "type": "kubiya",
        "config": {
          "url": "api/v1/integration/slack/token/1",
          "method": "GET",
          "silent": false
        }
      },
      "depends": [
        "normalize-channel-name"
      ],
      "output": "slack_token"
    },
    {
      "name": "debug-slack-token",
      "description": "Debug Slack token availability",
      "command": "echo 'üîç SLACK INTEGRATION DEBUG'\necho '========================'\necho 'SLACK_TOKEN: '${slack_token}\necho 'NORMALIZED_CHANNEL: '${NORMALIZED_CHANNEL_NAME}\necho 'ORIGINAL_CHANNEL: '${slack_channel_id}\necho 'INCIDENT_ID: '${incident_id}\necho 'INCIDENT_TITLE: '${incident_title}\necho 'ENVIRONMENT: '${environment}\necho ''\necho 'TOKEN VALIDATION:'\nif [ -z \"${slack_token}\" ]; then echo '‚ùå TOKEN IS EMPTY'; else echo '‚úÖ TOKEN EXISTS'; fi\nif [ \"${slack_token}\" = \"null\" ]; then echo '‚ùå TOKEN IS NULL'; else echo '‚úÖ TOKEN IS NOT NULL'; fi\nif [ -z \"${NORMALIZED_CHANNEL_NAME}\" ]; then echo '‚ùå CHANNEL NAME IS EMPTY'; else echo '‚úÖ CHANNEL NAME EXISTS'; fi\necho ''\necho 'READY FOR SLACK POSTING'",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "setup-slack-integration"
      ],
      "output": "slack_debug_info"
    },
    {
      "name": "validation_failure_message",
      "command": "if [ \"$VALIDATION_PASSED\" != \"true\" ]; then\n  echo \"\u26a0\ufe0f VALIDATION FAILURE DETECTED: Creating support agent to help\"\n  echo \"Missing required parameters: ${MISSING_PARAMS}\"\n  echo \"Will create an intelligent agent to assist with parameter collection\"\nelse\n  echo \"\u2705 All required parameters present\"\nfi\n",
      "description": "Prepare validation failure message if parameters are missing",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "debug-slack-token"
      ],
      "output": "validation_failure_message"
    },
    {
      "name": "prepare-agent-context",
      "command": "echo \"\ud83d\udd0d PREPARING AGENT CONTEXT\"\necho \"========================\"\nREGION_FOLLOWUP_PROMPT=\"Investigate production incident ${incident_id} - ${incident_title} (${incident_severity} severity) affecting ${affected_services} in ${region_name}.\"\necho \"REGION_FOLLOWUP_PROMPT=${REGION_FOLLOWUP_PROMPT}\"\necho \"\u2705 Agent context prepared successfully\"\n",
      "description": "Prepare simplified context for agent interactions",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "setup-slack-integration"
      ],
      "output": "agent_context"
    },
    {
      "name": "post-incident-alert",
      "command": "echo \"\ud83d\udea8 POSTING INCIDENT ALERT\"\necho \"========================\"\n\n# Check if we have a Slack token\nif [ -z \"${slack_token}\" ] || [ \"${slack_token}\" = \"null\" ]; then\n  echo \"\u26a0\ufe0f No Slack token available - skipping Slack alert\"\n  echo \"\u2705 Incident alert skipped (no Slack integration)\"\n  exit 0\nfi\n\n# Set severity emoji\nSEVERITY_EMOJI=\"\"\ncase \"${incident_severity}\" in\n  critical) SEVERITY_EMOJI=\"\ud83d\udd34\" ;;\n  high) SEVERITY_EMOJI=\"\ud83d\udfe0\" ;;\n  medium) SEVERITY_EMOJI=\"\ud83d\udfe1\" ;;\n  low) SEVERITY_EMOJI=\"\ud83d\udfe2\" ;;\n  *) SEVERITY_EMOJI=\"\u26aa\" ;;\nesac\n\necho \"Posting to channel: ${NORMALIZED_CHANNEL_NAME}\"\necho \"Using severity emoji: ${SEVERITY_EMOJI} for ${incident_severity}\"\n\n# Create incident alert payload\nPAYLOAD=\"{\\\"channel\\\":\\\"${NORMALIZED_CHANNEL_NAME}\\\",\\\"text\\\":\\\"\ud83d\udea8 INCIDENT: ${incident_title}\\\",\\\"blocks\\\":[{\\\"type\\\":\\\"header\\\",\\\"text\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"\ud83d\udea8 Received incident to triage in PRODUCTION!\\\",\\\"emoji\\\":true}},{\\\"type\\\":\\\"section\\\",\\\"text\\\":{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"*${incident_title}*\\\"}},{\\\"type\\\":\\\"section\\\",\\\"fields\\\":[{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"*ID:* ${incident_id}\\\"},{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"*Severity:* ${SEVERITY_EMOJI} ${incident_severity}\\\"},{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"*Priority:* ${incident_priority:-Not Set}\\\"},{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"*Services:* ${affected_services}\\\"}]},{\\\"type\\\":\\\"divider\\\"},{\\\"type\\\":\\\"section\\\",\\\"text\\\":{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"${incident_body}\\\"}},{\\\"type\\\":\\\"divider\\\"},{\\\"type\\\":\\\"actions\\\",\\\"elements\\\":[{\\\"type\\\":\\\"button\\\",\\\"text\\\":{\\\"type\\\":\\\"plain_text\\\",\\\"text\\\":\\\"\ud83d\udcca View on Datadog\\\",\\\"emoji\\\":true},\\\"url\\\":\\\"${incident_url}\\\",\\\"style\\\":\\\"primary\\\"}]},{\\\"type\\\":\\\"context\\\",\\\"elements\\\":[{\\\"type\\\":\\\"mrkdwn\\\",\\\"text\\\":\\\"\u26a1 AI investigation will begin automatically in a few seconds...\\\"}]}]}\"\n\necho \"Posting alert to Slack...\"\nRESPONSE=$(curl -s -X POST https://slack.com/api/chat.postMessage \\\n  -H \"Authorization: Bearer ${slack_token.token}\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"${PAYLOAD}\")\n\necho \"Slack API Response: ${RESPONSE}\"\n\nif echo \"${RESPONSE}\" | grep -q '\"ok\":true'; then\n  echo \"\u2705 Incident alert posted successfully to Slack!\"\nelse\n  echo \"\u26a0\ufe0f Failed to post incident alert to Slack - continuing workflow\"\n  echo \"Response: ${RESPONSE}\"\nfi\n\necho \"\u2705 Alert step completed (with or without Slack)\"\n",
      "description": "Send beautiful incident alert to Slack when services are provided",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "debug-slack-token"
      ],
      "output": "initial_alert_message",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "notify-investigation-progress",
      "command": "echo 'INVESTIGATION PROGRESS - ONLY POST WHEN AGENTS START'\necho '==================================================='\n\n# Only post if at least one investigation step actually started\necho \"Environment is: ${parsed_environment}\"\ncase \"${parsed_environment}\" in\n  \"na-production\"|\"development\")\n    echo 'NA investigation environment detected'\n    ;;\n  \"eu-production\")\n    echo 'EU investigation environment detected'\n    ;;\n  \"na-integration\")\n    echo 'NA-INT investigation environment detected'\n    ;;\n  *)\n    echo \"Unknown environment: ${parsed_environment}, skipping progress notification\"\n    exit 0\n    ;;\nesac\n\n# Check if we have Slack token\nif [ -z \"${slack_token}\" ] || [ \"${slack_token}\" = \"null\" ] || [ \"${slack_token}\" = \"\" ]; then\n  echo 'No Slack token available - skipping progress notification'\n  exit 0\nfi\n\necho \"Posting to channel: ${NORMALIZED_CHANNEL_NAME}\"\n\n# Simple progress message\nPAYLOAD='{\"channel\":\"'${NORMALIZED_CHANNEL_NAME}'\",\"text\":\"üîç AI Investigation Started\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"üîç *AI Investigation Started*\\n'${incident_title}'\"}}]}'\n\necho 'Posting progress to Slack...'\nRESPONSE=$(curl -s -X POST https://slack.com/api/chat.postMessage \\\n  -H \"Authorization: Bearer ${slack_token.token}\" \\\n  -H \"Content-Type: application/json\" \\\n  -d \"${PAYLOAD}\")\n\necho \"Slack Response: ${RESPONSE}\"\n\nif echo \"${RESPONSE}\" | grep -q '\"ok\":true'; then\n  echo 'Investigation progress posted to Slack'\nelse\n  echo 'Investigation progress posting failed'\nfi",
      "description": "Post investigation progress update AFTER agents start",
      "executor": {
        "type": "command",
        "config": {}
      },
      "depends": [
        "parse-environment-from-tags",
        "investigate-cluster-health-na-prod",
        "investigate-cluster-health-na-dev",
        "investigate-cluster-health-eu", 
        "investigate-cluster-health-na-int"
      ],
      "output": "investigation_progress_message",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "prepare-investigation-instructions",
      "description": "Prepare detailed investigation instructions for the agent",
      "executor": {
        "type": "command",
        "config": {}
      },
      "command": "cat << 'EOF'\nüö® PRODUCTION INCIDENT INVESTIGATION - ${region_name}\n\n**INCIDENT DETAILS:**\n- **Public ID:** ${incident_id}\n- **Title:** ${incident_title}\n- **Severity:** ${incident_severity}\n- **Priority:** ${incident_priority}\n- **Customer Impact:** ${customer_impact}\n- **Affected Services:** ${affected_services}\n\n**INVESTIGATION CHECKLIST:**\n\n### 1. CLUSTER HEALTH & NODES\nkubectl get nodes -o wide\nkubectl describe nodes | grep -E \"Conditions|Capacity|Allocatable\"\nkubectl top nodes\nkubectl get events --sort-by='.lastTimestamp' | tail -20\n\n### 2. POD STATUS & HEALTH\nkubectl get pods --all-namespaces -o wide | grep -v Running | head -20\nkubectl get pods -n production -o wide | grep -E \"Error|CrashLoop|Pending|Failed\"\nkubectl describe pods -n production | grep -E \"Warning|Error|Failed\" | head -30\nkubectl top pods -n production --sort-by=cpu | head -10\n\n### 3. SERVICE DISCOVERY & NETWORKING\nkubectl get svc --all-namespaces\nkubectl get ingress --all-namespaces\nkubectl get endpoints --all-namespaces | grep -v \"<none>\"\nnslookup kubernetes.default.svc.cluster.local\n\n### 4. APPLICATION SPECIFIC CHECKS\nkubectl logs deployment/${affected_services} -n production --tail=50 | grep -E \"ERROR|WARN|FATAL|Exception\"\nkubectl describe deployment ${affected_services} -n production | grep -E \"Warning|Error|Failed|Ready\"\nkubectl get hpa,pdb -n production | grep ${affected_services}\nkubectl exec deployment/${affected_services} -n production -- curl -s localhost:8080/health | head -10\n\n### 5. RESOURCE UTILIZATION\nkubectl top pods -n production --containers\nkubectl describe limits -n production\nkubectl get pvc -n production -o wide\ndf -h\n\n**INVESTIGATION REQUEST:**\nPlease conduct a thorough investigation of this ${incident_severity} severity incident affecting ${affected_services}. Provide detailed analysis, root cause identification, and actionable remediation steps.\nEOF",
      "depends": [
        "notify-investigation-progress"
      ],
      "output": "investigation_instructions"
    },
    {
      "name": "investigate-cluster-health-na-prod",
      "description": "AI-powered incident investigation for NA production",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "chatops-na",
          "message": "Production Incident Investigation Required. Alert ID: ${alert_id}. Status: ${alert_status}. Priority: ${alert_priority}. Incident: ${incident_body}. Environment: ${environment}. All Tags: ${all_tags}. Hostname: ${hostname}. Please conduct thorough investigation including cluster health, pod status, logs analysis, and provide root cause with remediation steps."
        }
      },
      "depends": [
        "parse-environment-from-tags",
        "prepare-investigation-instructions"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "na-production"
        }
      ],
      "output": "cluster_results",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "investigate-cluster-health-na-dev",
      "description": "AI-powered incident investigation for development environment",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "chatops-na",
          "message": "Development Environment Investigation Required. Alert ID: ${alert_id}. Status: ${alert_status}. Priority: ${alert_priority}. Incident: ${incident_body}. Environment: ${environment}. All Tags: ${all_tags}. Hostname: ${hostname}. Please conduct thorough investigation including cluster health, pod status, logs analysis, and provide root cause with remediation steps."
        }
      },
      "depends": [
        "parse-environment-from-tags",
        "prepare-investigation-instructions"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "development"
        }
      ],
      "output": "cluster_results",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "investigate-cluster-health-eu",
      "description": "AI-powered incident investigation for EU production",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "chatops-eu",
          "message": "Production Incident Investigation Required. Alert ID: ${alert_id}. Status: ${alert_status}. Priority: ${alert_priority}. Incident: ${incident_body}. Environment: ${environment}. All Tags: ${all_tags}. Hostname: ${hostname}. Please conduct thorough investigation including cluster health, pod status, logs analysis, and provide root cause with remediation steps."
        }
      },
      "depends": [
        "parse-environment-from-tags",
        "prepare-investigation-instructions"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "eu-production"
        }
      ],
      "output": "cluster_results",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "investigate-cluster-health-na-int",
      "description": "AI-powered incident investigation for NA integration",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "chatops-na-integration",
          "message": "Production Incident Investigation Required. Alert ID: ${alert_id}. Status: ${alert_status}. Priority: ${alert_priority}. Incident: ${incident_body}. Environment: ${environment}. All Tags: ${all_tags}. Hostname: ${hostname}. Please conduct thorough investigation including cluster health, pod status, logs analysis, and provide root cause with remediation steps."
        }
      },
      "depends": [
        "parse-environment-from-tags",
        "prepare-investigation-instructions"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "na-integration"
        }
      ],
      "output": "cluster_results",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "create-executive-summary-na",
      "description": "Create executive summary for NA production investigation",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "chatops-na",
          "message": "Create Executive Summary. Alert ID: ${alert_id}. Incident: ${incident_body}. Environment: ${environment}. Tags: ${all_tags}. Investigation Results: ${cluster_results}. Based on these investigation results, provide comprehensive executive summary including incident overview, key findings, root cause analysis, impact assessment, and recommended actions for stakeholders."
        }
      },
      "depends": [
        "investigate-cluster-health-na-prod"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "na-production"
        }
      ],
      "output": "executive_summary",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "create-executive-summary-na-dev",
      "description": "Create executive summary for development environment investigation",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "chatops-na",
          "message": "Create Executive Summary. Alert ID: ${alert_id}. Incident: ${incident_body}. Environment: ${environment}. Tags: ${all_tags}. Investigation Results: ${cluster_results}. Based on these investigation results, provide comprehensive executive summary including incident overview, key findings, root cause analysis, impact assessment, and recommended actions for stakeholders."
        }
      },
      "depends": [
        "investigate-cluster-health-na-dev"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "development"
        }
      ],
      "output": "executive_summary",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "create-executive-summary-eu",
      "description": "Create executive summary for EU production investigation",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "chatops-eu",
          "message": "Create Executive Summary. Alert ID: ${alert_id}. Incident: ${incident_body}. Environment: ${environment}. Tags: ${all_tags}. Investigation Results: ${cluster_results}. Based on these investigation results, provide comprehensive executive summary including incident overview, key findings, root cause analysis, impact assessment, and recommended actions for stakeholders."
        }
      },
      "depends": [
        "investigate-cluster-health-eu"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "eu-production"
        }
      ],
      "output": "executive_summary",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "create-executive-summary-na-int",
      "description": "Create executive summary for NA integration investigation",
      "executor": {
        "type": "agent",
        "config": {
          "agent_name": "chatops-na-integration",
          "message": "Create Executive Summary. Alert ID: ${alert_id}. Incident: ${incident_body}. Environment: ${environment}. Tags: ${all_tags}. Investigation Results: ${cluster_results}. Based on these investigation results, provide comprehensive executive summary including incident overview, key findings, root cause analysis, impact assessment, and recommended actions for stakeholders."
        }
      },
      "depends": [
        "investigate-cluster-health-na-int"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "na-integration"
        }
      ],
      "output": "executive_summary",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "post-investigation-summary-na",
      "description": "Post investigation summary to Slack for NA environments",
      "depends": [
        "create-executive-summary-na"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "na-production"
        }
      ],
      "executor": {
        "type": "command",
        "config": {}
      },
      "command": "echo 'üìã POSTING INVESTIGATION SUMMARY TO SLACK' && echo '=======================================' && if [ -z '${slack_token}' ] || [ '${slack_token}' = 'null' ]; then echo '‚ö†Ô∏è No Slack token available - skipping summary post' && echo '‚úÖ Summary post skipped (no Slack integration)' && exit 0; fi && SEVERITY_EMOJI='' && case '${incident_severity}' in critical) SEVERITY_EMOJI='üî¥' ;; high) SEVERITY_EMOJI='üü†' ;; medium) SEVERITY_EMOJI='üü°' ;; low) SEVERITY_EMOJI='üü¢' ;; *) SEVERITY_EMOJI='‚ö™' ;; esac && cat > /tmp/slack_payload.json << EOF\n{\n  \"channel\": \"${NORMALIZED_CHANNEL_NAME}\",\n  \"text\": \"‚úÖ AI Investigation Complete\",\n  \"blocks\": [\n    {\n      \"type\": \"header\",\n      \"text\": {\n        \"type\": \"plain_text\",\n        \"text\": \"üö® INCIDENT INVESTIGATION COMPLETE\",\n        \"emoji\": true\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"fields\": [\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Alert ID:* ${alert_id}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Status:* ${alert_status}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Priority:* ${alert_priority}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Environment:* ${environment}\"\n        }\n      ]\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*üîç Investigation Summary:*\\n${executive_summary}\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*üìä Full Investigation Results:*\\n${cluster_results}\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"actions\",\n      \"elements\": [\n        {\n          \"type\": \"button\",\n          \"text\": {\n            \"type\": \"plain_text\",\n            \"text\": \"üîó View Datadog Alert\",\n            \"emoji\": true\n          },\n          \"url\": \"${incident_url}\",\n          \"style\": \"primary\"\n        },\n        {\n          \"type\": \"button\",\n          \"text\": {\n            \"type\": \"plain_text\",\n            \"text\": \"üìã Follow Up Investigation\",\n            \"emoji\": true\n          },\n          \"value\": \"investigate_further\",\n          \"action_id\": \"investigate_further\"\n        }\n      ]\n    }\n  ]\n}\nEOF\necho 'Posting enhanced summary to Slack...' && curl -s -X POST https://slack.com/api/chat.postMessage -H 'Authorization: Bearer ${slack_token}' -H 'Content-Type: application/json' -d @/tmp/slack_payload.json && echo '‚úÖ Investigation summary posted successfully to Slack!'",
      "output": "summary_post_status",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "post-investigation-summary-eu",
      "description": "Post investigation summary to Slack for EU environment",
      "depends": [
        "create-executive-summary-eu"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "eu-production"
        }
      ],
      "executor": {
        "type": "command",
        "config": {}
      },
      "command": "echo 'üìã POSTING INVESTIGATION SUMMARY TO SLACK' && echo '=======================================' && if [ -z '${slack_token}' ] || [ '${slack_token}' = 'null' ]; then echo '‚ö†Ô∏è No Slack token available - skipping summary post' && echo '‚úÖ Summary post skipped (no Slack integration)' && exit 0; fi && SEVERITY_EMOJI='' && case '${incident_severity}' in critical) SEVERITY_EMOJI='üî¥' ;; high) SEVERITY_EMOJI='üü†' ;; medium) SEVERITY_EMOJI='üü°' ;; low) SEVERITY_EMOJI='üü¢' ;; *) SEVERITY_EMOJI='‚ö™' ;; esac && cat > /tmp/slack_payload.json << EOF\n{\n  \"channel\": \"${NORMALIZED_CHANNEL_NAME}\",\n  \"text\": \"‚úÖ AI Investigation Complete\",\n  \"blocks\": [\n    {\n      \"type\": \"header\",\n      \"text\": {\n        \"type\": \"plain_text\",\n        \"text\": \"üö® INCIDENT INVESTIGATION COMPLETE\",\n        \"emoji\": true\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"fields\": [\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Alert ID:* ${alert_id}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Status:* ${alert_status}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Priority:* ${alert_priority}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Environment:* ${environment}\"\n        }\n      ]\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*üîç Investigation Summary:*\\n${executive_summary}\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*üìä Full Investigation Results:*\\n${cluster_results}\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"actions\",\n      \"elements\": [\n        {\n          \"type\": \"button\",\n          \"text\": {\n            \"type\": \"plain_text\",\n            \"text\": \"üîó View Datadog Alert\",\n            \"emoji\": true\n          },\n          \"url\": \"${incident_url}\",\n          \"style\": \"primary\"\n        },\n        {\n          \"type\": \"button\",\n          \"text\": {\n            \"type\": \"plain_text\",\n            \"text\": \"üìã Follow Up Investigation\",\n            \"emoji\": true\n          },\n          \"value\": \"investigate_further\",\n          \"action_id\": \"investigate_further\"\n        }\n      ]\n    }\n  ]\n}\nEOF\necho 'Posting enhanced summary to Slack...' && curl -s -X POST https://slack.com/api/chat.postMessage -H 'Authorization: Bearer ${slack_token}' -H 'Content-Type: application/json' -d @/tmp/slack_payload.json && echo '‚úÖ Investigation summary posted successfully to Slack!'",
      "output": "summary_post_status",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "post-investigation-summary-na-int",
      "description": "Post investigation summary to Slack for NA integration environment",
      "depends": [
        "create-executive-summary-na-int"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "na-integration"
        }
      ],
      "executor": {
        "type": "command",
        "config": {}
      },
      "command": "echo 'üìã POSTING INVESTIGATION SUMMARY TO SLACK' && echo '=======================================' && if [ -z '${slack_token}' ] || [ '${slack_token}' = 'null' ]; then echo '‚ö†Ô∏è No Slack token available - skipping summary post' && echo '‚úÖ Summary post skipped (no Slack integration)' && exit 0; fi && SEVERITY_EMOJI='' && case '${incident_severity}' in critical) SEVERITY_EMOJI='üî¥' ;; high) SEVERITY_EMOJI='üü†' ;; medium) SEVERITY_EMOJI='üü°' ;; low) SEVERITY_EMOJI='üü¢' ;; *) SEVERITY_EMOJI='‚ö™' ;; esac && cat > /tmp/slack_payload.json << EOF\n{\n  \"channel\": \"${NORMALIZED_CHANNEL_NAME}\",\n  \"text\": \"‚úÖ AI Investigation Complete\",\n  \"blocks\": [\n    {\n      \"type\": \"header\",\n      \"text\": {\n        \"type\": \"plain_text\",\n        \"text\": \"üö® INCIDENT INVESTIGATION COMPLETE\",\n        \"emoji\": true\n      }\n    },\n    {\n      \"type\": \"section\",\n      \"fields\": [\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Alert ID:* ${alert_id}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Status:* ${alert_status}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Priority:* ${alert_priority}\"\n        },\n        {\n          \"type\": \"mrkdwn\",\n          \"text\": \"*Environment:* ${environment}\"\n        }\n      ]\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*üîç Investigation Summary:*\\n${executive_summary}\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"section\",\n      \"text\": {\n        \"type\": \"mrkdwn\",\n        \"text\": \"*üìä Full Investigation Results:*\\n${cluster_results}\"\n      }\n    },\n    {\n      \"type\": \"divider\"\n    },\n    {\n      \"type\": \"actions\",\n      \"elements\": [\n        {\n          \"type\": \"button\",\n          \"text\": {\n            \"type\": \"plain_text\",\n            \"text\": \"üîó View Datadog Alert\",\n            \"emoji\": true\n          },\n          \"url\": \"${incident_url}\",\n          \"style\": \"primary\"\n        },\n        {\n          \"type\": \"button\",\n          \"text\": {\n            \"type\": \"plain_text\",\n            \"text\": \"üìã Follow Up Investigation\",\n            \"emoji\": true\n          },\n          \"value\": \"investigate_further\",\n          \"action_id\": \"investigate_further\"\n        }\n      ]\n    }\n  ]\n}\nEOF\necho 'Posting enhanced summary to Slack...' && curl -s -X POST https://slack.com/api/chat.postMessage -H 'Authorization: Bearer ${slack_token}' -H 'Content-Type: application/json' -d @/tmp/slack_payload.json && echo '‚úÖ Investigation summary posted successfully to Slack!'",
      "output": "summary_post_status",
      "continueOn": {
        "failure": true
      }
    },
    {
      "name": "post-investigation-summary-na-dev",
      "description": "Post investigation summary to Slack for development environment",
      "depends": [
        "create-executive-summary-na-dev"
      ],
      "preconditions": [
        {
          "condition": "${parsed_environment}",
          "expected": "development"
        }
      ],
      "executor": {
        "type": "command",
        "config": {}
      },
      "command": "echo 'üìã POSTING INVESTIGATION SUMMARY TO SLACK' && echo '=======================================' && if [ -z '${slack_token}' ] || [ '${slack_token}' = 'null' ]; then echo '‚ö†Ô∏è No Slack token available - skipping summary post' && echo '‚úÖ Summary post skipped (no Slack integration)' && exit 0; fi && SEVERITY_EMOJI='' && case '${incident_severity}' in critical) SEVERITY_EMOJI='üî¥' ;; high) SEVERITY_EMOJI='üü†' ;; medium) SEVERITY_EMOJI='üü°' ;; low) SEVERITY_EMOJI='üü¢' ;; *) SEVERITY_EMOJI='‚ö™' ;; esac && cat > /tmp/slack_payload.json << EOF\\n{\\n  \\\"channel\\\": \\\"${NORMALIZED_CHANNEL_NAME}\\\",\\n  \\\"text\\\": \\\"‚úÖ AI Investigation Complete\\\",\\n  \\\"blocks\\\": [\\n    {\\n      \\\"type\\\": \\\"header\\\",\\n      \\\"text\\\": {\\n        \\\"type\\\": \\\"plain_text\\\",\\n        \\\"text\\\": \\\"üö® INCIDENT INVESTIGATION COMPLETE\\\",\\n        \\\"emoji\\\": true\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"section\\\",\\n      \\\"fields\\\": [\\n        {\\n          \\\"type\\\": \\\"mrkdwn\\\",\\n          \\\"text\\\": \\\"*Alert ID:* ${alert_id}\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"mrkdwn\\\",\\n          \\\"text\\\": \\\"*Status:* ${alert_status}\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"mrkdwn\\\",\\n          \\\"text\\\": \\\"*Priority:* ${alert_priority}\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"mrkdwn\\\",\\n          \\\"text\\\": \\\"*Environment:* ${environment}\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"type\\\": \\\"section\\\",\\n      \\\"text\\\": {\\n        \\\"type\\\": \\\"mrkdwn\\\",\\n        \\\"text\\\": \\\"*üîç Investigation Summary:*\\\\n${executive_summary}\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"divider\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"section\\\",\\n      \\\"text\\\": {\\n        \\\"type\\\": \\\"mrkdwn\\\",\\n        \\\"text\\\": \\\"*üìä Full Investigation Results:*\\\\n${cluster_results}\\\"\\n      }\\n    },\\n    {\\n      \\\"type\\\": \\\"divider\\\"\\n    },\\n    {\\n      \\\"type\\\": \\\"actions\\\",\\n      \\\"elements\\\": [\\n        {\\n          \\\"type\\\": \\\"button\\\",\\n          \\\"text\\\": {\\n            \\\"type\\\": \\\"plain_text\\\",\\n            \\\"text\\\": \\\"üîó View Datadog Alert\\\",\\n            \\\"emoji\\\": true\\n          },\\n          \\\"url\\\": \\\"${incident_url}\\\",\\n          \\\"style\\\": \\\"primary\\\"\\n        },\\n        {\\n          \\\"type\\\": \\\"button\\\",\\n          \\\"text\\\": {\\n            \\\"type\\\": \\\"plain_text\\\",\\n            \\\"text\\\": \\\"üìã Follow Up Investigation\\\",\\n            \\\"emoji\\\": true\\n          },\\n          \\\"value\\\": \\\"investigate_further\\\",\\n          \\\"action_id\\\": \\\"investigate_further\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\nEOF\\necho 'Posting enhanced summary to Slack...' && curl -s -X POST https://slack.com/api/chat.postMessage -H 'Authorization: Bearer ${slack_token}' -H 'Content-Type: application/json' -d @/tmp/slack_payload.json && echo '‚úÖ Investigation summary posted successfully to Slack!'",
      "output": "summary_post_status",
      "continueOn": {
        "failure": true
      }
    }
  ]
}
